package com.huaweicloud.sdk.iot.device.demo;

import com.huaweicloud.sdk.iot.device.client.requests.CommandRsp;
import com.huaweicloud.sdk.iot.device.service.AbstractService;
import com.huaweicloud.sdk.iot.device.service.DeviceCommand;
import com.huaweicloud.sdk.iot.device.service.Property;
import java.util.Map;
import java.util.Random;

import org.apache.log4j.Logger;

/**
 * This code is generated by FreeMarker
 *
 */
public class basicsServiceService extends AbstractService
{
    private static Logger log = Logger.getLogger(basicsServiceService.class);
    private Random random = new Random();

    /********** attribute ***********/
    @Property(writeable =  true)
    private double BloodPressure;

    @Property(writeable =  true)
    private double HeartRate;

    @Property(writeable =  true)
    private float oxyhemoglobinSaturation;



    /********** commands ***********/
    @DeviceCommand
    public CommandRsp basicServiceControl (Map<String, Object> paras) {
      //todo 请在这里添加命令处理代码
      return new CommandRsp(0);
    }


    /********** get/set ***********/
    public double getBloodPressure() {
        //模拟从传感器读取数据
        int x=random.nextInt(140)+60;
        BloodPressure = x;
        log.info("report property BloodPressure value =  "+ BloodPressure);

        return BloodPressure;
    }

    public void setBloodPressure(double BloodPressure) {
        this.BloodPressure = BloodPressure;
        log.info("property BloodPressure set to "+ BloodPressure);
    }

    public double getHeartRate() {
        //模拟从传感器读取数据
        int x=random.nextInt(150)+50;
        HeartRate =x;
        log.info("report property HeartRate value =  "+ HeartRate);

        return HeartRate;
    }

    public void setHeartRate(double HeartRate) {
        this.HeartRate = HeartRate;
        log.info("property HeartRate set to "+ HeartRate);
    }

    public float getOxyhemoglobinSaturation() {
        //模拟从传感器读取数据

        oxyhemoglobinSaturation = Float.parseFloat(String.format("%.2f",random.nextFloat()*0.2+0.9));
        log.info("report property oxyhemoglobinSaturation value =  "+ oxyhemoglobinSaturation);

        return oxyhemoglobinSaturation;
    }

    public void setOxyhemoglobinSaturation(float oxyhemoglobinSaturation) {
        this.oxyhemoglobinSaturation = oxyhemoglobinSaturation;
        log.info("property oxyhemoglobinSaturation set to "+ oxyhemoglobinSaturation);
    }


}